{"version":3,"sources":["components/Icon.js","api/url.js","api/index.js","views/Login.js","components/Header.js","components/Footer.js","store/actionCreator.js","components/Sidebar.js","components/List.js","views/Home.js","views/MyBook.js","views/Me.js","views/Index.js","router/Router.js","serviceWorker.js","store/index.js","index.js"],"names":["Icon","props","type","className","onClick","urls","login","listAll","common","config","a","async","axios","res","data","Api","url","method","getListAll","Login","state","username","password","visible","e","field","console","log","this","setState","target","value","keyCode","handleLogin","then","code","history","push","alert","message","obj","b","c","obj2","JSON","parse","stringify","obj3","immutableObj","fromJS","d","getIn","toJS","newObj","setIn","onChange","handleInput","placeholder","autoFocus","onKeyUp","handleKeyUp","handelVisible","Component","connect","title","dispatch","onSetState","key","onDispatch","action","Footer","to","currentId","useEffect","actionCreator","sidebarDom","map","item","id","listDom","category","list","book","src","avatar","Home","MyBook","Me","renderRoute","component","path","render","Router","from","exact","Index","Boolean","window","location","hostname","match","defaultState","store","createStore","applyMiddleware","getState","next","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbf05f3b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Icon = (props) => {\r\n  let { type, className } = props\r\n  return (\r\n    <span className={`icon iconfont icon-${type} ${className ? className : ''}`} onClick={props.onClick}></span>\r\n  )\r\n}\r\n\r\nexport default Icon","const urls = {\r\n  login: '/api/login',  //登录\r\n  listAll: '/api/list_all', //获取列表数据，用于做楼层\r\n}\r\n\r\nexport default urls","import axios from 'axios'\r\nimport urls from './url'\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  axios.defaults.baseURL = 'http://localhost:90'\r\n}\r\n\r\n\r\nconst common = async (config) => {\r\n  let res = await axios(config)\r\n  return res.data\r\n}\r\n\r\nconst Api = {\r\n  login: (data) => common({ url: urls.login, data, method: 'post' }),\r\n  getListAll: () => common({url: urls.listAll})\r\n}\r\n\r\nexport default Api\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Icon from '../components/Icon'\r\nimport Api from '../api'\r\nimport { fromJS } from 'immutable'\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: 'admin',\r\n      password: '123456',\r\n      visible: false\r\n    }\r\n  }\r\n\r\n  handleInput(e, field) {\r\n    console.log(e)\r\n    this.setState({\r\n      [field]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleKeyUp(e) {\r\n    console.log(e)\r\n    if (e.keyCode === 13) {\r\n      this.handleLogin()\r\n    }\r\n  }\r\n\r\n  handelVisible() {\r\n    let { visible } = this.state\r\n    this.setState({\r\n      visible: !visible\r\n    })\r\n  }\r\n\r\n  handleLogin() {\r\n    let { username, password } = this.state\r\n    //console.log(username, password)\r\n    Api.login({username, password}).then(res => {\r\n      if (res.code === 200) {\r\n        //alert('登录成功！')\r\n        this.props.history.push('/index/home')\r\n      } else if (res.code === 400) {\r\n        alert(res.message)\r\n      }\r\n    })\r\n    // axios({\r\n    //   url: 'http://localhost:90/api/login',\r\n    //   data: {\r\n    //     username, password\r\n    //   },\r\n    //   method: 'post'\r\n    // }).then(res => {\r\n    //   if (res.data.code === 200) {\r\n    //     //alert('登录成功！')\r\n    //     this.props.history.push('/index/home')\r\n    //   } else if (res.data.code === 400) {\r\n    //     alert(res.data.message)\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('immutable')\r\n    let obj = {\r\n      a: {\r\n        b: 1\r\n      },\r\n      c: 2\r\n    }\r\n    let obj2 = JSON.parse(JSON.stringify(obj))  //深拷贝，有性能问题\r\n    obj2.a.b = 2\r\n    console.log('obj:', obj)\r\n    console.log('obj2:', obj2)\r\n\r\n    let obj3 = {...obj}  //浅拷贝\r\n    obj3.c = 3\r\n    console.log('obj:', obj)\r\n    console.log('obj3:', obj3)\r\n\r\n    obj3.a.b = 4\r\n\r\n    console.log('obj:', obj)\r\n    console.log('obj3:', obj3)\r\n\r\n\r\n    let immutableObj = fromJS({\r\n      c: {\r\n        d: 1\r\n      },\r\n      e: 2\r\n    })\r\n\r\n    console.log(immutableObj.getIn(['c', 'd']))  //1\r\n    console.log(immutableObj.getIn(['c']).toJS())\r\n\r\n    let newObj = immutableObj.setIn(['c', 'd'], 3)\r\n    console.log(immutableObj.toJS())\r\n    console.log(newObj.toJS())\r\n  }\r\n\r\n\r\n  render() {\r\n    let { username, password, visible } = this.state\r\n    return (\r\n      <div>\r\n        <div>\r\n          姓名：<input value={username} onChange={(e) => this.handleInput(e, 'username')} placeholder=\"请输入用户名\" autoFocus ></input>\r\n        </div>\r\n        <div>\r\n          密码：<input value={password} onChange={(e) => this.handleInput(e, 'password')} placeholder=\"请输入密码\" type={ visible ? \"text\" : \"password\"} onKeyUp={(e) => this.handleKeyUp(e)}></input>\r\n          <Icon type={ visible ? \"xianshimima\" : \"buxianshimima\"} className=\"m-login-icon\" onClick={() => this.handelVisible()}></Icon>\r\n        </div>\r\n        <button onClick={() => this.handleLogin()}>登录</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Header = (props) => {\r\n  let { title } = props\r\n  return (\r\n    <div className=\"m-header\">\r\n      {title}\r\n    </div>\r\n  )\r\n}\r\n\r\n//取全局store里的数据\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listAll: state.getIn(['listAll']).toJS(),\r\n    title: state.getIn(['title'])\r\n  }\r\n}\r\n\r\n//改全局store里的数据\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //同步\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    //异步\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Icon from './Icon'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"m-footer\">\r\n      <NavLink to=\"/index/home\" className=\"m-footer-item\">\r\n        <Icon type=\"shouye\" className=\"m-footer-item-icon\" ></Icon>\r\n        <div className=\"m-footer-item-text\">首页</div>\r\n      </NavLink>\r\n      <NavLink to=\"/index/my_book\" className=\"m-footer-item\">\r\n        <Icon type=\"shubao\" className=\"m-footer-item-icon\" ></Icon>\r\n        <div className=\"m-footer-item-text\">书包</div>\r\n      </NavLink>\r\n      <NavLink to=\"/index/me\" className=\"m-footer-item\">\r\n        <Icon type=\"wode\" className=\"m-footer-item-icon\" ></Icon>\r\n        <div className=\"m-footer-item-text\">我的</div>        \r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import Api from '../api'\r\n\r\n//获取列表数据\r\nconst getListAll = () => (dispatch) => {\r\n  Api.getListAll().then(res => {\r\n    if (res.code === 200) {\r\n      //console.log(res)\r\n      dispatch({ type: 'SET_STATE', key: ['listAll'], value: res.data })\r\n    }\r\n  })\r\n} \r\n\r\nexport default {\r\n  getListAll\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport actionCreator from '../store/actionCreator'\r\nimport { connect } from 'react-redux'\r\nimport Api from '../api'\r\n\r\nconst Sidebar = (props) => {\r\n  //相当于componentDidMount\r\n  useEffect(() => {\r\n    props.onDispatch(actionCreator.getListAll())\r\n    // Api.getListAll().then(res => {\r\n    //   if (res.code === 200) {\r\n    //     props.onSetState(['listAll'], res.data)\r\n    //   }\r\n    // })\r\n  }, [])\r\n\r\n  const handleNav = (id) => {\r\n    console.log(id)\r\n    props.onSetState(['currentId'], id)\r\n  }\r\n\r\n  let { listAll, currentId } = props\r\n  let sidebarDom = listAll.map(item => (\r\n    <div key={item.id} \r\n      className={\"m-sidebar-item \" + (currentId === item.id ? 'active' : '')} \r\n      onClick={() => handleNav(item.id)} >{item.title}</div>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"m-sidebar\">\r\n      {sidebarDom}\r\n    </div>\r\n  )\r\n}\r\n\r\n//取全局store里的数据\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listAll: state.getIn(['listAll']).toJS(),\r\n    currentId: state.getIn(['currentId'])\r\n  }\r\n}\r\n\r\n//改全局store里的数据\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //同步\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    //异步\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst List = (props) => {\r\n  let { listAll } = props\r\n  let listDom = listAll.map(category => (\r\n    <div key={category.id}>\r\n      <div className=\"m-category-title\">\r\n        {category.title}\r\n      </div>\r\n      \r\n      {\r\n        category.list.map(book => (\r\n          <div key={book.id} className=\"m-list-item\">\r\n            <div className=\"m-list-img-wrap\">\r\n              <img src={book.avatar} className=\"m-list-img\"></img>\r\n            </div>\r\n            <div className=\"m-list-info\">{book.title}</div>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  ))\r\n  return (\r\n    <div className=\"m-list\">\r\n      {listDom}\r\n    </div>\r\n  )\r\n}\r\n\r\n//取全局store里的数据\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listAll: state.getIn(['listAll']).toJS(),\r\n    currentId: state.getIn(['currentId'])\r\n  }\r\n}\r\n\r\n//改全局store里的数据\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //同步\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    //异步\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List)","import React from 'react'\r\nimport Sidebar from '../components/Sidebar'\r\nimport List from '../components/List'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"m-main m-home\">\r\n      <Sidebar></Sidebar>\r\n      <List></List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst MyBook = () => {\r\n  return (\r\n    <div className=\"m-main\">\r\n      myBook\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyBook","import React from 'react'\r\n\r\nconst Me = () => {\r\n  return (\r\n    <div className=\"m-main\">\r\n      我的\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Me","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport Home from './Home'\r\nimport MyBook from './MyBook'\r\nimport Me from './Me'\r\n\r\nconst Index = (props) => {\r\n  const renderRoute = (component, title) => {\r\n    props.onSetState(['title'], title)\r\n    return component\r\n  }\r\n  return (\r\n    <div className=\"m-wrap\">\r\n      <Header></Header>\r\n      <Switch>\r\n        <Route path=\"/index/home\" render={() => renderRoute(<Home></Home>, '小米书城')}></Route>\r\n        <Route path=\"/index/my_book\" render={() => renderRoute(<MyBook></MyBook>, '我的书包')}></Route>\r\n        <Route path=\"/index/me\" render={() => renderRoute(<Me></Me>, '个人中心')}></Route>\r\n      </Switch>\r\n      <Footer></Footer>\r\n    </div>\r\n  )\r\n}\r\n\r\n//取全局store里的数据\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  }\r\n}\r\n\r\n//改全局store里的数据\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //同步\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    //异步\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from '../views/Login'\r\nimport Index from '../views/Index'\r\n\r\nexport default class Router extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Switch>\r\n          <Redirect from=\"/\" to=\"/login\" exact></Redirect>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/index\" component={Index}></Route>\r\n        </Switch>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\n//import thunk from 'redux-thunk'\r\nimport { fromJS } from 'immutable' //https://www.npmjs.com/package/immutable\r\n\r\nconst defaultState = fromJS({\r\n  listAll: [],  //列表全部数据\r\n  currentId: 0,   //高亮\r\n  title: '小米书城', //顶部header\r\n})\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_STATE':\r\n      return state.setIn(action.key, fromJS(action.value))\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nlet thunk = ({ dispatch, getState }) => (next) => (action) => {\r\n  if (typeof action === 'function') {\r\n    return action(dispatch, getState);\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport Router from './router/Router';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport './index.css';\nimport './font/iconfont.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Router></Router>\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}