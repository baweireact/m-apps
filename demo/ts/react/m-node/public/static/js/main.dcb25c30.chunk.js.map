{"version":3,"sources":["store/book/reducer.ts","store/index.ts","components/Icon.tsx","api/urls.ts","api/index.ts","components/Sidebar.tsx","components/List.tsx","views/Login.tsx","components/Header.tsx","components/Footer.tsx","components/Stars.tsx","components/Dialog.tsx","store/book/actionCreator.ts","views/Home.tsx","views/MyBooks.tsx","views/Me.tsx","views/Index.tsx","views/Detail.tsx","router/Router.tsx","serviceWorker.ts","index.tsx"],"names":["defaultState","title","currentId","isRealScroll","list","myBooks","reducer","state","action","type","newState","JSON","parse","stringify","key","value","reducers","combineReducers","book","store","createStore","applyMiddleware","thunk","subscribe","getState","console","log","Icon","props","name","className","onClick","e","urls","login","detail","axios","interceptors","request","use","config","headers","token","localStorage","getItem","error","Promise","reject","response","res","data","code","alert","message","timer","topArr","common","a","resolve","Api","url","method","getDetail","id","Login","useState","username","setUsername","password","setPassword","visible","setVisible","handleLogin","then","setItem","history","push","onChange","target","placeholder","autoFocus","onKeyUp","keyCode","handleEnter","count","connect","dispatch","onSetState","onDispatch","to","sidebarDom","map","item","document","getElementById","scrollIntoView","block","behavior","clearTimeout","setTimeout","Stars","starsDom","i","Dialog","children","onCancel","onOk","callback","withRouter","checked","avatar","price","stars","setBook","handleCancel","useEffect","Array","from","getElementsByClassName","offsetTop","Infinity","listDom","category","src","alt","stopPropagation","handleShowDialog","onScroll","scrollTop","length","handleScroll","actionCreator","parseInt","replace","handleInput","MyBooks","Me","renderComponent","Component","path","render","Detail","match","params","Router","exact","info","component","Index","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dcb25c30.chunk.js","sourcesContent":["import { IBookState, IAction } from '../../types'\r\n\r\nconst defaultState: IBookState = {\r\n  title: '小米书城',\r\n  currentId: 0,\r\n  isRealScroll: true,\r\n  list: [],\r\n  myBooks: []\r\n}\r\n\r\nconst reducer = (state = defaultState, action: IAction) => {\r\n  switch (action.type) {\r\n    case 'SET_STATE':\r\n      let newState = JSON.parse(JSON.stringify(state))\r\n      newState[action.key] = action.value\r\n      return newState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n//import { IState, IAction } from '../interface'\r\nimport book from './book/reducer'\r\n\r\n// const defaultState: IState = {\r\n//   title: '小米书城',\r\n//   currentId: 0,\r\n//   isRealScroll: true,\r\n//   list: [],\r\n//   myBooks: []\r\n// }\r\n\r\n// const reducer = (state = defaultState, action: IAction) => {\r\n//   switch (action.type) {\r\n//     case 'SET_STATE':\r\n//       let newState = JSON.parse(JSON.stringify(state))\r\n//       newState[action.key] = action.value\r\n//       return newState\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\nconst reducers = combineReducers({\r\n  book\r\n})\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState()\r\n  console.log(state)\r\n})\r\n\r\nexport default store","import React, { MouseEvent } from 'react'\r\n\r\ninterface IProps {\r\n  name: string,\r\n  className?: string,\r\n  onClick?: (e: MouseEvent, count: number) => void\r\n}\r\n\r\nconst Icon = (props: IProps) => {\r\n  let { name, className = '', onClick = () => {} } = props\r\n  return (\r\n    <span className={`icon iconfont icon-${name} ${className}`} onClick={(e) => onClick(e, 1)}></span>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","const urls = {\r\n  login: '/api/login',\r\n  list: '/api/list',\r\n  myBooks: '/api/my_books',\r\n  detail: '/api/detail/'\r\n}\r\n\r\nexport default urls","import axios, { AxiosRequestConfig } from 'axios'\r\nimport urls from './urls'\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  axios.defaults.baseURL = 'http://localhost:84'\r\n}\r\n\r\naxios.interceptors.request.use((config) => {\r\n  config.headers.token = localStorage.getItem('token')\r\n  return config\r\n}, (error) => {\r\n  console.log('对请求错误做些什么', error)\r\n  return Promise.reject(error);\r\n})\r\n\r\naxios.interceptors.response.use((res) => {\r\n  if (res.data.code === 400) {\r\n    alert(res.data.message)\r\n  }\r\n  return res\r\n}, (error) => {\r\n  console.log('对响应错误做些什么')\r\n  return Promise.reject(error)\r\n})\r\n\r\nconst common = async (config:AxiosRequestConfig) => {\r\n  let resolve = await axios(config)\r\n  return resolve.data\r\n}\r\n\r\nconst Api = {\r\n  login: (data: object) => common({ url: urls.login, data, method: 'post' }),\r\n  list: () => common({ url: urls.list }),\r\n  myBooks: (data: object, method: AxiosRequestConfig['method']) => common({ url: urls.myBooks, data, method }),\r\n  getDetail: (id: string) => common({url: urls.detail + id})\r\n}\r\n\r\nexport default Api\r\n\r\n\r\n\r\n\r\n","import React, { Dispatch } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { IStore, IList } from '../types'\r\n\r\ninterface IProps {\r\n  list: IList[],\r\n  currentId: number,\r\n  onSetState: (key: string, value: any) => void\r\n  onDispatch: (action: Function) => void\r\n}\r\n\r\nlet timer: any\r\nconst Sidebar = (props: IProps) => {\r\n  const { list, currentId } = props\r\n\r\n  const handleNav = (id: number) => {\r\n    props.onSetState('currentId', id);\r\n    props.onSetState('isRealScroll', false)\r\n    //@ts-ignore\r\n    document.getElementById(id + '').scrollIntoView({ block: 'start', behavior: 'smooth' })\r\n\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      props.onSetState('isRealScroll', true)\r\n    }, 1000)\r\n  }\r\n\r\n  const sidebarDom = list.map((item: IList) => (\r\n    <div key={item.id} className={`m-sidebar-item ${currentId === item.id ? 'active' : ''}`} onClick={() => handleNav(item.id) }>{item.title}</div>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"m-sidebar\">\r\n      {sidebarDom}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n  return {\r\n    list: state.book.list,\r\n    currentId: state.book.currentId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onSetState(key: string, value: any) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispatch(action: Function) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n","import React, { Dispatch, useState, useEffect, MouseEvent, ChangeEvent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { IStore, IList, IBook } from '../types'\r\nimport Stars from './Stars'\r\nimport Dialog from './Dialog'\r\nimport actionCreator from '../store/book/actionCreator'\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  list: IList[],\r\n  isRealScroll: boolean,\r\n  onSetState: (key: string, value: any) => void,\r\n  onDispatch: (action: Function) => void\r\n}\r\n\r\nlet topArr:number[]\r\n\r\nconst List = (props: IProps) => {\r\n  let { list, isRealScroll } = props\r\n  const [ visible, setVisible ] = useState<boolean>(false)\r\n  let [ book, setBook ] = useState<IBook>({\r\n    checked: true,\r\n    count: 1,\r\n    id: 1,\r\n    title: '',\r\n    avatar: '',\r\n    price: 0,\r\n    stars: 0\r\n  })\r\n\r\n  const handleShowDialog = (e: MouseEvent, book: any) => {\r\n    e.stopPropagation()\r\n    book.checked = true\r\n    book.count = 1\r\n    setBook(book)\r\n    setVisible(true)\r\n  }\r\n\r\n  const handleInput = (e:ChangeEvent<HTMLInputElement>) => {\r\n    let count = parseInt(e.target.value.replace(/[^\\d]/g, ''))\r\n    if (count === 0) {\r\n      count = 1\r\n    }\r\n    book.count = count\r\n    setBook({...book})\r\n  }\r\n\r\n  const handleAdd = () => {\r\n    book.count++\r\n    setBook({...book})\r\n  }\r\n\r\n  const handleSub = () => {\r\n    if (book.count > 1) {\r\n      book.count--\r\n      setBook({...book})\r\n    }\r\n  }\r\n\r\n  const handleAddToMyBooks = () => {\r\n    props.onDispatch(actionCreator.myBooks({book}, 'post', handleCancel))\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const handleDetail = (id: number) => {\r\n    props.history.push(`/detail/${id}`)\r\n  }\r\n\r\n  const handleScroll = (e: React.UIEvent<HTMLDivElement, globalThis.UIEvent>) => {\r\n    let scrollTop = (e.target as Element).scrollTop + 40\r\n    if (isRealScroll) {\r\n      for (let i = 0; i < topArr.length - 1; i++) {\r\n        if (topArr[i] <= scrollTop && scrollTop < topArr[i + 1]) {\r\n          props.onSetState('currentId', i)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    topArr = Array.from(document.getElementsByClassName('js-category')).map((item:any) => item.offsetTop)\r\n    topArr.push(Infinity)\r\n  }, [props.list])\r\n\r\n  let listDom = list.map(category => (\r\n    <div key={category.id} id={category.id + ''} className=\"js-category\">\r\n      <div className=\"m-category-title\">{category.title}</div>\r\n      {\r\n        category.list.map((book: IBook) => (\r\n          <div key={book.id} className=\"m-list-item\" onClick={() => handleDetail(book.id)}>\r\n            <div className=\"m-img-wrap\">\r\n              <img src={book.avatar} alt={book.title} className=\"m-img\"></img>\r\n            </div>\r\n            <div className=\"m-list-info\">\r\n              {book.title}\r\n              <Stars count={book.stars}></Stars>\r\n              <button className=\"m-btn\" onClick={ (e) => handleShowDialog(e, book) }>添加</button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"m-list\" onScroll={(e) => handleScroll(e) }>\r\n      {listDom}\r\n      <Dialog title=\"添加\" visible={visible} onOk={ () => handleAddToMyBooks() } onCancel={() => handleCancel()}>\r\n        <div className=\"m-add-wrap\">\r\n            <div className=\"m-add-info\">\r\n              <button className=\"m-btn\" onClick={() => handleSub()}>-</button>\r\n              <input value={book.count} placeholder=\"数量\" className=\"m-input\" onChange={(e) => handleInput(e)} ></input>\r\n              <button className=\"m-btn\" onClick={() => handleAdd()} >+</button>\r\n            </div>\r\n          </div>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n  return {\r\n    list: state.book.list,\r\n    currentId: state.book.currentId,\r\n    isRealScroll: state.book.isRealScroll\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onSetState(key: string, value: any) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispatch(action: Function) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(List))\r\n\r\n","import React, { useState, MouseEvent, KeyboardEvent } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport Icon from '../components/Icon'\r\nimport Api from '../api'\r\n\r\nconst Login = (props: RouteComponentProps) => {\r\n  const [ username, setUsername ] = useState('admin')\r\n  const [ password, setPassword ] = useState('123456')\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const handleVisible = (e: MouseEvent, count: number ) => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const handleEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.keyCode === 13 ) {\r\n      handleLogin()\r\n    }\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    Api.login({ username, password }).then(res => {\r\n      if (res.code === 200) {\r\n        localStorage.setItem('token', res.data.username)\r\n        props.history.push('/index/home')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"请输入用户名\" autoFocus></input>\r\n      </div>\r\n      <div>\r\n        <input value={password} onChange={(e) => setPassword(e.target.value)} onKeyUp={ (e) => handleEnter(e)  } placeholder=\"请输入密码\" type={ visible ? 'text' : 'password' }></input>\r\n        <Icon name={ visible ? 'show' : 'hide' } onClick={ (e, count) => handleVisible(e, count) } className=\"m-login-icon\"></Icon>\r\n      </div>\r\n      <button onClick={() => handleLogin()}>登录</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { Dispatch } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { IStore } from '../types'\r\n\r\ninterface IProps {\r\n  title: string\r\n}\r\n\r\nconst Header = (props: IProps) => {\r\n  const { title } = props\r\n  return (\r\n    <div className=\"m-header\">\r\n      {title}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: IStore) => {\r\n  return {\r\n    title: state.book.title\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onSetState(key: string, value: any) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispatch(action: Function) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React, { Dispatch } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Icon from './Icon'\r\nimport { connect } from 'react-redux'\r\n\r\ninterface IProps {\r\n  onSetState: (key: string, value: any) => void\r\n  onDispatch: (action: Function) => void\r\n}\r\n\r\nconst Footer = (props: IProps) => {\r\n\r\n  const handleNav = (title: string) => {\r\n    //props.onSetState('title', title)\r\n  }\r\n\r\n  return (\r\n    <div className=\"m-footer\">\r\n      <NavLink to=\"/index/home\" className=\"m-footer-item\" onClick={() => handleNav('小米书城')}>\r\n        <Icon name=\"home\" className=\"m-footer-icon\"></Icon>\r\n        <div className=\"m-footer-text\">首页</div>\r\n      </NavLink>\r\n      <NavLink to=\"/index/my_books\" className=\"m-footer-item\" onClick={() => handleNav('我的书包')}>\r\n        <Icon name=\"shubao\" className=\"m-footer-icon\"></Icon>\r\n        <div className=\"m-footer-text\">书包</div>\r\n      </NavLink>\r\n      <NavLink to=\"/index/me\" className=\"m-footer-item\" onClick={() => handleNav('个人中心')}>\r\n        <Icon name=\"me\" className=\"m-footer-icon\"></Icon>\r\n        <div className=\"m-footer-text\">我的</div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onSetState(key: string, value: any) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispatch(action: Function) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer)\r\n","import React from 'react'\r\nimport Icon from './Icon'\r\n\r\ninterface IProps {\r\n  count: number\r\n}\r\n\r\nconst Stars = (props: IProps) => {\r\n  let { count } = props\r\n\r\n  const starsDom = []\r\n  for (let i = 0; i < 5; i++) {\r\n    starsDom.push(<Icon name=\"star\" key={i} className={`m-star ${ i < count ? 'active' : '' }`}></Icon>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {starsDom}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stars\r\n","import React, { ReactElement } from 'react'\r\nimport Icon from './Icon'\r\n\r\ninterface IProp {\r\n  title: string,\r\n  visible: boolean,\r\n  children: ReactElement,\r\n  onOk: () => void,\r\n  onCancel: () => void\r\n}\r\n\r\nconst Dialog = (props: IProp) => {\r\n  let { visible, title, children } = props\r\n  return (\r\n    <div className={\"m-dialog-wrap \" + (visible ? 'active' : '')}>\r\n      <div className=\"m-dialog\">\r\n        <div className=\"m-dialog-header\">\r\n          <div className=\"m-dialog-title\" >{title}</div>\r\n          <Icon name=\"guanbi\" className=\"m-dialog-close\" onClick={props.onCancel}></Icon>\r\n        </div>\r\n        <div className=\"m-dialog-content\">\r\n          {children}\r\n        </div>\r\n        <div className=\"m-dialog-footer\">\r\n          <button className=\"m-btn\" onClick={props.onCancel}>取消</button>\r\n          <button className=\"m-btn\" onClick={props.onOk}>确定</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog\r\n","import { Dispatch } from 'react'\r\nimport { Method } from 'axios'\r\nimport Api from '../../api'\r\n\r\nconst list = () => (dispatch: Dispatch<any>) => {\r\n  Api.list().then(res => {\r\n    if (res.code === 200) {\r\n      dispatch({ type: 'SET_STATE', key: 'list', value: res.data })\r\n    }\r\n  })\r\n}\r\n\r\nconst myBooks = (data: any, method: Method , callback: Function) => (dispatch: Dispatch<any>) => {\r\n  Api.myBooks(data, method).then(res => {\r\n    if (res.code === 200) {\r\n      dispatch({ type: 'SET_STATE', key: ['myBooks'], value: res.data })\r\n      callback && callback()\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport default {\r\n  list,\r\n  myBooks\r\n}","import React, { useEffect, Dispatch } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Sidebar from '../components/Sidebar'\r\nimport List from '../components/List'\r\nimport actionCreator from '../store/book/actionCreator'\r\n\r\ninterface IProps {\r\n  onSetState: (key: string, value: any) => void\r\n  onDispatch: (action: Function) => void\r\n}\r\n\r\nconst Home = (props: IProps) => {\r\n\r\n  useEffect(() => {\r\n    props.onDispatch(actionCreator.list())\r\n  }, [props])\r\n\r\n  return (\r\n    <div className=\"m-main m-home\">\r\n      <Sidebar></Sidebar>\r\n      <List></List>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onSetState(key: string, value: any) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispatch(action: Function) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React from 'react'\r\n\r\nconst MyBooks = () => {\r\n  return (\r\n    <div className=\"m-main\">\r\n      我的书包\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyBooks\r\n","import React from 'react'\r\n\r\nconst Me = () => {\r\n  return (\r\n    <div className=\"m-main\">\r\n      个人中心\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Me\r\n","import React, { Dispatch, ReactElement } from 'react'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Home from './Home'\r\nimport MyBooks from './MyBooks'\r\nimport Me from './Me'\r\n\r\ninterface IProps {\r\n  onSetState: (key: string, value: any) => void\r\n  onDispatch: (action: Function) => void\r\n}\r\n\r\nconst Index = (props: IProps) => {\r\n  const renderComponent = (Component: ReactElement, title: string) => {\r\n    setTimeout(() => {\r\n      props.onSetState('title', title)\r\n    })\r\n    \r\n    return Component\r\n  }\r\n\r\n  return (\r\n    <div className=\"m-wrap\">\r\n      <Header></Header>\r\n      <Switch>\r\n        <Route path=\"/index/home\" render={() => renderComponent(<Home></Home>, '小米书城')}></Route>\r\n        <Route path=\"/index/my_books\" render={() => renderComponent(<MyBooks></MyBooks>, '我的书包')}></Route>\r\n        <Route path=\"/index/me\" render={() => renderComponent(<Me></Me>, '个人中心')}></Route>\r\n      </Switch>\r\n      <Footer></Footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n  return {\r\n    onSetState(key: string, value: any) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    },\r\n    onDispatch(action: Function) {\r\n      dispatch(action)\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)\r\n","import React, { useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport Api from '../api'\r\n\r\ninterface IProps extends RouteComponentProps {\r\n\r\n}\r\n\r\nconst Detail = (props: IProps ) => {\r\n  \r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    let { id } = props.match.params\r\n    Api.getDetail(id).then(res =>  {\r\n\r\n    })\r\n  }, [props])\r\n  \r\n  return (\r\n    <div>\r\n      详情\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\nimport Login from '../views/Login'\r\nimport Index from '../views/Index'\r\nimport Detail from '../views/Detail'\r\n\r\nexport default class Router extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Redirect from=\"/\" to=\"/login\" exact></Redirect>\r\n        <Route path=\"/login\" render={(info) => <Login {...info}></Login>}></Route>\r\n        <Route path=\"/index\" component={Index}></Route>\r\n        <Route path=\"/detail/:id\" component={Detail}></Route>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from './store/index'\nimport Router from './router/Router'\nimport './font/iconfont.css'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Router></Router>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}